name: main

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  merge-sites:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: leexuben/BINGO-TV
        path: bingo-tv
        token: ${{ secrets.GH_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install requests

    - name: Merge sites
      run: |
        python3 << 'EOF'
import json
import requests

sources = [
    {
        "url": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/王二小/api.json",
        "jar": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/王二小/spider.jar",
        "base": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/王二小/"
    },
    {
        "url": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/潇洒/api.json",
        "jar": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/潇洒/spider.jar", 
        "base": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/潇洒/"
    },
    {
        "url": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/巧技/api.json",
        "jar": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/巧技/spider.jar",
        "base": "https://raw.githubusercontent.com/leexuben/TV-BOX/main/tvbox/巧技/"
    },
    {
        "url": "https://raw.githubusercontent.com/leexuben/ljlfct01.github.io/main/影视",
        "jar": "https://raw.githubusercontent.com/leexuben/ljlfct01.github.io/main/jar/spider.jar",
        "base": "https://raw.githubusercontent.com/leexuben/ljlfct01.github.io/main/"
    }
]

target_file = "bingo-tv/综合影视.json"

def get_sites(url):
    try:
        response = requests.get(url, timeout=30)
        if response.status_code == 200:
            data = json.loads(response.text)
            if isinstance(data, dict) and 'sites' in data:
                return data['sites']
            elif isinstance(data, list):
                return data
        return []
    except:
        return []

try:
    with open(target_file, 'r', encoding='utf-8') as f:
        target_data = json.load(f)
except:
    target_data = {}

if 'sites' not in target_data:
    target_data['sites'] = []

existing_sites = target_data['sites']
existing_keys = {site.get('key', '') for site in existing_sites}

for source in sources:
    sites = get_sites(source['url'])
    for site in sites:
        if 'jar' not in site:
            site['jar'] = source['jar']
        
        if 'api' in site and site['api'].startswith('./'):
            site['api'] = source['base'] + site['api'][2:]
        
        key = site.get('key', '')
        if key and key not in existing_keys:
            existing_sites.append(site)
            existing_keys.add(key)

target_data['sites'] = existing_sites

with open(target_file, 'w', encoding='utf-8') as f:
    json.dump(target_data, f, ensure_ascii=False, indent=2)

print("合并完成")
EOF

    - name: Commit changes
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        cd bingo-tv
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add 综合影视.json
        if git diff --cached --quiet; then
          echo "没有更改"
          exit 0
        fi
        git commit -m "Update sites"
        git push origin main
